from bluesky.plans import count, configure_count_time

def xpd_count(sample_dict, count_time):
    def custom_plan():
        yield from configure_count_time(pe1c, count_time)
        yield from count([pe1c], num=1, md=sample_dict)


    return RE(custom_plan())

uid = xpd_count(sample_dict, count_time)


def prun(sample_dict, plan, table=True, verify=True):
    """
    Parameters
    ----------
    sample_dict : dict
        i.e., an object that the sample manager knows about
    plan : Plan
        an object-oriented bluesky Plan
    table : boolean, optional
    verify : boolean, optional

    Examples
    --------
    Do a count.
    >>> plan = xpd_count(sample_dict, count_time)
    >>> prun(xpd_count)
    
    Do a temperature scan.
    >>> plan = Scan([pe1c], cs700, 290, 300, 10)
    >>> prun(sample_dict, plan, count_time=5, **kwargs)

    """
    subs = []
    if table:
        columns = []
        columns.extend(plan.detectors)  # all plans have detectors
        if hasattr(plan.motors):
            columns.extend(motors)
        subs.append(LiveTable(columns))
    if verify:
        subs.append(verify_files_saved)
    def custom_plan(*args, count_time=None, **kwargs):
        yield from configure(
    RE(plan, **sample_dict)

subs = LiveTable, verify, 
md = ChainMap(user_md, sample, shared_md)
RE(plan, **md)
